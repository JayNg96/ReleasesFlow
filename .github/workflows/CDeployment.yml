name: Deployment
on:
  pull_request:
    branches:
      - 'prod'
      
jobs:     
  build:
    runs-on: ubuntu-latest
    steps:
          
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          repository: JayNg96/ReleasesFlow   
          
      - name: Install Libraries
        run: |
          pip install flake8 pytest pytest-cov pandas Flask Flask-MySQLdb Flask-SQLAlchemy mysql-connector-python-rf PyMySQL SQLAlchemy
          
      - name: test with pytest
        run: |
          python -m pytest tests/test_* -v -cov --junitxml=report.xml
    
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action/composite@v2
        if: always()
        with:
          junit_files: "report.xml"
          
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: UAT
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: conventional Changelog Action
      id: changelog
      uses: TriPSs/conventional-changelog-action@v3
      with:
        github-token: ${{ secrets.github_token }}
        version-file: "./package.json,./package-lock.json"

    - name: create release
      id: create-new-release
      uses: actions/create-release@v1
      if: ${{ steps.changelog.outputs.skipped == 'false' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.changelog.outputs.tag }}
        release_name: ${{ steps.changelog.outputs.tag }}
        body: ${{ steps.changelog.outputs.clean_changelog }}
          
    - name: Create release branch
      run: |
        git branch release/${{ steps.changelog.outputs.tag }}
        git push -u origin release/${{ steps.changelog.outputs.tag }}

    - name: Create pull request
      uses: peter-evans/create-pull-request@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        branch: release/${{ steps.changelog.outputs.tag }}
        title: "Release ${{ steps.changelog.outputs.tag }}"
        body: "This pull request is to deploy the code from UAT to the release branch"
        labels: "deployment"
        reviewers: "team-lead, developer1, developer2"

    - name: Deploy to production
      if: github.event.pull_request.merged == true
      run: |
        git push origin prod
      # ansible-playbook deploy.yml -i production
      
    - name: send zip on push
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          Hello Stakeholders,
          We are excited to announce the release of version ${{ env.RELEASE_VERSION }} of our project. This release includes several new features, bug fixes, and performance improvements.
          Please take a moment to review the changelog and release notes for more details on the changes in this release at https://github.com/${{ github.repository }}/commit/${{github.sha}}.
          As always, if you have any questions or concerns, please don't hesitate to reach out to the project team.
          Best regards,
          DOT4"
            

